/*
*   Carlos Otávio Guimarães     10277057        c.o.guimaraes@usp.br
*   Leonardo Tres Martinez      10277314        leo.tmartinez@usp.br
*/
import java.awt.image.ImageFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

public class MainInterface extends javax.swing.JFrame {

    public MainInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        textLoadImg = new javax.swing.JLabel();
        textProcType = new javax.swing.JLabel();
        textResize = new javax.swing.JLabel();
        onSelectAA = new javax.swing.JRadioButton();
        imgPath = new javax.swing.JTextField();
        onSelectImg = new javax.swing.JButton();
        onProcessImg = new javax.swing.JButton();
        textFilterSize = new javax.swing.JLabel();
        listFilters = new javax.swing.JComboBox<>();
        newTam = new javax.swing.JComboBox<>();
        textFilterType = new javax.swing.JLabel();
        filterType = new javax.swing.JComboBox<>();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textLoadImg.setText("Carregar imagem:");

        textProcType.setText("Tipo de processamento:");

        textResize.setText("Redimensionamento:");

        onSelectAA.setSelected(true);
        onSelectAA.setText("Anti Aliasing");

        onSelectImg.setText("Selecionar");
        onSelectImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelectImgActionPerformed(evt);
            }
        });

        onProcessImg.setText("Processar");
        onProcessImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onProcessImgActionPerformed(evt);
            }
        });

        textFilterSize.setText("Tamanho do filtro:");

        listFilters.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PI/4 (Default)", "PI/8", "PI/16" }));
        listFilters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listFiltersActionPerformed(evt);
            }
        });

        newTam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "32x32", "64x64", "128x128", "256x256", "512x512", "1024x1024" }));

        textFilterType.setText("Tipo de filtro:");

        filterType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Butterworth Low Pass (Default)", "Ideal Low Pass" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(textLoadImg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imgPath, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(onSelectImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textResize)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(newTam, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textProcType)
                                        .addGap(18, 18, 18)
                                        .addComponent(onSelectAA)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textFilterSize)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(listFilters, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textFilterType)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(filterType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(onProcessImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textLoadImg)
                    .addComponent(imgPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(onSelectImg))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textProcType)
                    .addComponent(onSelectAA)
                    .addComponent(textFilterType)
                    .addComponent(filterType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textResize)
                    .addComponent(newTam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFilterSize)
                    .addComponent(listFilters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(onProcessImg)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onSelectImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSelectImgActionPerformed
        imgPath.setText("");
                
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "Images", "tif","tiff");
        fileChooser.setFileFilter(filter);
        
        fileChooser.setAcceptAllFileFilterUsed(false);
        int result = fileChooser.showOpenDialog(this);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            imgPath.setText("" + selectedFile.getAbsolutePath());
        }
        
    }//GEN-LAST:event_onSelectImgActionPerformed

    private void onProcessImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onProcessImgActionPerformed
        int tam = 0;
        String filterSize;
        String filterT = (String) filterType.getSelectedItem();
        
        if (listFilters.getSelectedItem().equals("PI/4 (Default)")){
            filterSize = "PI/4";
        }
        else{
            filterSize = (String) listFilters.getSelectedItem();
        }
        
        if(newTam.getSelectedItem().equals("32x32")){
            tam = 32;
        }
        else if(newTam.getSelectedItem().equals("64x64")){
            tam = 64;
        }
        else if(newTam.getSelectedItem().equals("128x128")){
            tam = 128;
        }
        else if(newTam.getSelectedItem().equals("256x256")){
            tam = 256;
        }
        else if(newTam.getSelectedItem().equals("512x512")){
            tam = 512;
        }
        else if(newTam.getSelectedItem().equals("1024x1024")){
            tam = 1024;
        }
        
        
        if(imgPath.getText().equals("") || tam==0){
            throw new ArrayStoreException("Error: No input entered");
        }
        
        if(onSelectAA.isSelected()){
            ImageProcessing.antialias(imgPath.getText(), tam, tam, filterT,filterSize);
        }
        else{
            ImageProcessing.noProcessing(imgPath.getText(), tam, tam, "None","None");
        }
        
    }//GEN-LAST:event_onProcessImgActionPerformed

    private void listFiltersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listFiltersActionPerformed

    }//GEN-LAST:event_listFiltersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> filterType;
    private javax.swing.JTextField imgPath;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JComboBox<String> listFilters;
    private javax.swing.JComboBox<String> newTam;
    private javax.swing.JButton onProcessImg;
    private javax.swing.JRadioButton onSelectAA;
    private javax.swing.JButton onSelectImg;
    private javax.swing.JLabel textFilterSize;
    private javax.swing.JLabel textFilterType;
    private javax.swing.JLabel textLoadImg;
    private javax.swing.JLabel textProcType;
    private javax.swing.JLabel textResize;
    // End of variables declaration//GEN-END:variables
}
